/*
 * Copyright 2016-2023 NXP SPDX-License-Identifier: BSD-3-Clause
 *
 * Automatically generated by svd-gen-header.py from MIMXRT595S_cm33.xml
 */
#pragma once

#include "hw/register.h"

/* Flexcomm */
#define FLEXCOMM_REGS_NO (1024)

/* Peripheral Select and Flexcomm module ID */
REG32(FLEXCOMM_PSELID, 0xFF8);
/* Peripheral Select */
FIELD(FLEXCOMM_PSELID, PERSEL, 0, 3);
/* No peripheral selected. */
#define FLEXCOMM_PSELID_PERSEL_NO_PERIPH_SELECTED 0
/* USART function selected */
#define FLEXCOMM_PSELID_PERSEL_USART 1
/* SPI function selected */
#define FLEXCOMM_PSELID_PERSEL_SPI 2
/* I2C */
#define FLEXCOMM_PSELID_PERSEL_I2C 3
/* I2S Transmit */
#define FLEXCOMM_PSELID_PERSEL_I2S_TRANSMIT 4
/* I2S Receive */
#define FLEXCOMM_PSELID_PERSEL_I2S_RECEIVE 5
/* Lock the peripheral select */
FIELD(FLEXCOMM_PSELID, LOCK, 3, 1);
/* USART present indicator */
FIELD(FLEXCOMM_PSELID, USARTPRESENT, 4, 1);
/* SPI present indicator */
FIELD(FLEXCOMM_PSELID, SPIPRESENT, 5, 1);
/* I2C present indicator */
FIELD(FLEXCOMM_PSELID, I2CPRESENT, 6, 1);
/* I2S Present */
FIELD(FLEXCOMM_PSELID, I2SPRESENT, 7, 1);
/* Flexcomm ID */
FIELD(FLEXCOMM_PSELID, ID, 12, 20);

/* Peripheral Identification */
REG32(FLEXCOMM_PID, 0xFFC);
/* Minor revision of module implementation */
FIELD(FLEXCOMM_PID, Minor_Rev, 8, 4);
/* Major revision of module implementation */
FIELD(FLEXCOMM_PID, Major_Rev, 12, 4);
/* Module identifier for the selected function */
FIELD(FLEXCOMM_PID, ID, 16, 16);


#define FLEXCOMM_REGISTER_ACCESS_INFO_ARRAY(_name) \
    struct RegisterAccessInfo _name[FLEXCOMM_REGS_NO] = { \
        [0 ... FLEXCOMM_REGS_NO - 1] = { \
            .name = "", \
            .addr = -1, \
        }, \
        [0x3FE] = { \
            .name = "PSELID", \
            .addr = 0xFF8, \
            .ro = 0xFFFFFFF0, \
            .reset = 0x101000, \
        }, \
        [0x3FF] = { \
            .name = "PID", \
            .addr = 0xFFC, \
            .ro = 0xFFFFFFFF, \
            .reset = 0x0, \
        }, \
    }
